<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAKSQAAAEAIABYGAAAFgAAACgAAAApAAAASAAAAAEAIAAAAAAAEBcAAAAAAAAAAAAAAAAAAAAA
        AAAAAAABAAAABAAAAA0AAAAXAAAAHAAAAB0AAAAeAAAAHgAAAB0AAAAdAAAAHgAAAB8AAAAfAAAAHwAA
        ABwAAAAWAAAAEwAAABQAAAAWAAAAGAAAABkAAAAZAAAAGAAAABcAAAAVAAAAEwAAABQAAAAaAAAAHwAA
        ACAAAAAgAAAAIAAAACAAAAAhAAAAIQAAACEAAAAiAAAAIQAAABsAAAAPAAAABQAAAAIAAAAMrokZKbyN
        IkzClSNgxZoeZciZI2bGlyNnzZklZsqXK2XKmyhmzJ8saMyeM2nToj1o0KZPYdGzXlTbwGdN3L95UN7E
        gFbgx4db4ciMXeHLj13hzZBc4suHWeHJhFXbwndP2blsUM+uV1vSoUNnyJg1aseZMWnDlS5qw5Qta8iZ
        MGvImS1rxJctbMeYL23Ckyxou4wvUq6LLiwAAAANAAAAAgAAABK5kx9CyKAshteZDrLXmxzB2Zofw9ia
        FsPfnxzC2JUgwtmZHcPZnRXD3JodxM2YH8PVqkm86cVysO3Oiajy0pKq8c6UsvfapLjs0aC79d2gu+/V
        o7rw0KG49NSYs+/Ularw0o+m58FtscqbJ7/bnBTE354Zxc2VGcXWmxzF354YxtiZFcbSmBjG1psZxdqa
        DrXInyiHvZcuQgAAABIAAAABAAAADQAAADvXpS6L6JcN0NaTGe7Vkh300pkU9dOcEfXRkRT02pMZ9dqV
        FvXVkxb11aMV9N6vO/Hgt2Xr8tGU5+jQm+fo1qHs7dil8OzVpfLw2Zvy7c+p8vDSqfHv2Jrt6tyd5vjk
        quD12pDlzrBB79SZDvTblxT1y5MW9cuYHPXamBv10pQQ9cuaFvXRlxnt6JYVzNWgLoYAAAA4AAAADQAA
        AAAAAAAGAAAAItmnJmXVnyq315kM7NiYFP3SmhP/y5wL/8+aDP/cmRT/15YR/9KaFf/irDf/5axD/tmm
        UP3sxoX87dWh/OzdrP3l0p/+79ae/+/Xo//x06r/8dWm/uzbnP3m2KD68Ny59vzfuffwzpP70Z8h/tqV
        Cv/ZmhD/z5kW/9iWD//YmQ//0ZoR/NmXDOjJkhyw0Z0jXgAAAB8AAAAFAAAAAAAAAAEAAAAOAAAAO+Gu
        LorPmw/T15gR9tWVGP7LlBX/050U/9iaEf/PlRf/z6Qp/+GnR//hqD//469E/96zVv/315X/8Nik/+/S
        n//52Z7/8dak//XXoP/w1Zz/7tqj/+7dsv7v27j9+Ny+/fnZvP7ZtF//0pUV/96YD//Wlxf/1ZcP/9mc
        Fv7PkRX03JsRztijI4IAAAA1AAAADAAAAAEAAAAAAAAAAAAAAAQAAAAc16QiWtakJq3YlhXm4pIX+9iR
        GP/amRT/2pcM/9iYHP/cqjr/16tM/92yRf/ftjz/zag6/+LEc//v053/7dKm//LVqP/j0qH/7dmg/+nU
        of/n1rX/7ODE/+/ivP/w47f/7uK6/+7RmP/Tojb/2pIO/96WE//UmQ7/2pkU+s+MGePfpimnzp4kVAAA
        ABkAAAAEAAAAAAAAAAAAAAAAAAAAAQAAAAsAAAAy2qslfc2dIMjbmAzy15YV/s+ZEP/UnA//2qQo/9iw
        QP/Yqzz/4bI+/+GvN//fsD3/37RT//fSiP/12J//7NKk/+rYnf/226L/99mo//HdtP/x37r/9eCz//fk
        sf/u5K7/8+Kx/9q/b//MmRv/1JoL/8uaEP7SmQ7xy5UcxtWmIngAAAAuAAAACQAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAwAAABblqRpNzJwen9eZC9/Ylxb6zJUU/9ieHf/mrDv/2qxH/96vQ//dqUT/46lK/+Wr
        S//Zp0f/4bxn//Tbm//k1Kb/6Nmh//LTpv/12Kz/9OS1//Dgtf/12br/+d/B/+neuP/74rb/9deo/9ej
        OP/ZnQ7/z5YZ+d2ZFt7fpzGd1qkpSgAAABUAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAACAAA
        ACnbrStwyZ4hwNqcDu/XlhH926Yt/9+sS//drUP/3a1E/9utR//ZrEX/4rBG/9+rQP/crk//6sqD/+vZ
        pP/w1pr/8Nun//Dgtf/w4rj/8uK0//bis//04bT/8uK4///gs//h3r//6MKC/tahEf3SmBbuyZUcvNmo
        JmwAAAAmAAAABwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAE9q1N0XZpDeVy44Y2d+h
        H/jfqT7+3a5F/+GtO//hrUL/3a1D/92tQ//grT//4q0//92sR//fumf/7dOP/+/Vp//x27L/8N++//De
        v//x3Lz/9N66//PfvP/v3b7/8+C6//Leu/325K/71qVJ9dmgD9fWpTWQAAAAPwAAABAAAAACAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHAAAAI9mtO2TJnTS026oq59WoR/rTrEL+3q88/+Wu
        P//grEH/3q5E/96qP//lrUD/4KxC/9mrTP/uxnP/89is//XctP/z4Lv/8Ny5//Hctv/13rj/9N66//Db
        u//t37X++uG1++vgsfX2yovj2KsyseW4R2EAAAAgAAAABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAIAAAAOAAAAN9+8U37jxmLB5sBy6eTAdPnpxHL+6sNu/+bBb//jwnP/479x/+nD
        cf/mwG7/471v/+zMgf/y2Jz/8deb/+7Wmv/t1Zn/7taa/+7Wmv/u1pz/7NWd/+/UnP/l0Zf75tGb7frU
        jsbpxWh/AAAANQAAAAwAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAQAAAAW6b9pRPLUfoj+3Z/I/de07vLdt/zy4rT/8uK3/+vft//u4rr/8eG3//Lfsv/04rP/7tyt/+jL
        hv/gw3n/3b1x/+HAcP/ixHP/4MFy/9+/c//hwXX/6r53/9bBb/nivnLe38Bwn8vLZU4AAAAXAAAAAwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAYAAAAd6tWHVfrg
        oaL22bje6eTA+e7euf7w4Lz/69y7/+/gv//s3bz/7924//Xit//n06T/8tOW/+rHg//nwHL/6sJv/+3F
        cv/pw3H/6MFy/+vCc//xwHT968pt8ObBbMLrx3JyAAAAKgAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAv/vYAy896hferYrcrr5LPz9d+1/vri
        uP/54bf/+OC2//nht//44LL/99yp//LXn//u1aP/7M2P/+vEev/pwW//58Fv/+fCcv/owXL/6cBx/+a8
        b/jlwmzb6Ml8mN++gUcAAAATAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAABr25atY8N+0rffhuOjt3bn88uC7//Thu//u27X/8d+6/+7d
        tv/jz6P/7dil/+nXqP/u1Jj/7MyB/+fDb//jwW3/5MNz/+fEdP/nwW/9479x7OHCeLnmyXhoAAAAJAAA
        AAcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAABAAAADP///zn97r+L79y21PTfsvf14rz+7dq3//Lfuv/34bf/79im/+zYn//p15z/+9eh/+zV
        o//l1o7/5Mdy/+i+cf/nw3X/4MRt/ubAcvffw2/W5MKAjwAAAD4AAAAPAAAAAgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAIv/y
        wmT35sK18N616fThu/zx37r/8d64//Hbsf/t1af/7NWj/+3WpP/w1KX/69if/+vXnf/nyIv/5r52/+nE
        cP/oxHD85sJu6t3Ce7ToyXljAAAAIQAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAQ/+q/PP/uyIfu3rnP8N+49fTj
        uP7z3rH/7dao/+zUpv/u1Kb/8NWp/+jTpv/q2Jv/8deo/+3Jo//nwn7/7sRr/uvBbvXjwnHR48iAhwAA
        ADoAAAAOAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAAAc/+3HV/Tkw6nt3Ljl9eGy+/Pdqf/u1qD/79ej/+7T
        of/z1aT/7NWn//HYmv/11aT/8M+o//DOjP/tx2n75r9t5uTDgKvly4VYAAAAGwAAAAQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAQAAAAoAAAAw/+7EevDgwMfv26zx8Nqg/u3Ym//u2J7/7dWb//HWnf/w1aP/9NWe//LU
        mf/v1p7/89eX/efIc/HhxXvJ6MyKfAAAADEAAAAKAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAA
        ABb/8sNM9OPDnO3Zsd3t16P56tij/+nYpf/p16L/7tmi//HUp//z1qr/7tef/+3boPzy2qby486P1OPP
        j5nr05RMAAAAFgAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAACAAAACf97MZr9ePGufTh
        vOvy4r787OLA/+7ivv/y47z/9t+///Hjv//v5b388+K78ffiv9Lv26yc6dObXAAAACQAAAAIAAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAEP//1T3/8tKH//HXzP/x3vL27t39+PHe//vu
        2P//8N3/9PTW/vT03Pf87Nrb/+rMoe7jtlsAAAAnAAAACwAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAFAAAAG//w11P58tqf9/DX3fzx1vn88d3/9u7h//jx3v/28Nn9+fXZ7fjy
        2L706chzAAAALgAAAAwAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAEAAAAKAAAAK/3223D48Nu+++/X7fvw2v348N//+e/d//ry2/n38tne+fDXnvjrx04AAAAXAAAAAwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAU//TbRv3x
        3ZT57trW+e7Y9vry2/758Nz9+/Pc8vXu1sj789N7AAAAMQAAAAsAAAABAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAcAAAAk//XeZPju3LH27tfm+/LX+/vw
        2vn58Nzi9/DZpv/21VYAAAAbAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAA///9M6+/HahPbt28z68dbx/PLa7/Xt2cf/99x9AAAANAAA
        AAwAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAABQAAAB359txY/PHdp/rw2dv68tva9/HapP/22FUAAAAbAAAABAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAADP//
        /zT/9d56+/Hbs/jx17L98tt4//+qMwAAAAwAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAGvv03Ej/8td09vDTdPvx
        1EcAAAAZAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAJAAAAHPX12zH179UxAAAAHAAAAAkAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAIAAAAGAAAACwAAAAsAAAAGAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAABAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAA
        AAAAAAAAgAAAAAAAAADAAAAAAIAAAMAAAAAAgAAA4AAAAAGAAADgAAAAA4AAAPAAAAADgAAA+AAAAAeA
        AAD4AAAAB4AAAPwAAAAPgAAA/AAAAB+AAAD+AAAAH4AAAP8AAAA/gAAA/wAAAD+AAAD/gAAAf4AAAP+A
        AAB/gAAA/8AAAP+AAAD/wAAA/4AAAP/gAAH/gAAA/+AAAf+AAAD/8AAD/4AAAP/4AAf/gAAA//gAD/+A
        AAD//AAP/4AAAP/8AB//gAAA//4AH/+AAAD//wA//4AAAP//AD//gAAA//+Af/+AAAD//4B//4AAAP//
        wP//gAAA///z//+AAAA=
</value>
  </data>
</root>